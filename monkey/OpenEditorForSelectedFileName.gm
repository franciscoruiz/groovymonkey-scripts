/*
 * Menu: Open editor for selected file name
 * Script-Path: /groovymonkey-scripts/monkey/OpenEditorForSelectedFileName.gm
 * Kudos: fran
 * License: EPL 1.0
 * LANG: Python
 * Job: UIJob
 */
"""
Search for files matching the current editor selected text and open an editor
for each one.

"""
from org.eclipse.jface.dialogs import MessageDialog
from org.eclipse.ui import PlatformUI
from org.eclipse.ui.part import FileEditorInput


MAX_EDITORS_TO_OPEN = 3
"""
Maximum number of editors that will be opened.

If the number of matches is higher, no editors will be opened.

"""


def main():
    """
    Search for files matching the current editor selected text and open
    an editor for each one.

    """
    text_selection = get_text_selection().strip()
    if text_selection:
        resources_matching = resources.filesMatching('.*' + text_selection)
        if not resources_matching:
            show_info('No resources matching "%s"' % text_selection)
        elif len(resources_matching) > MAX_EDITORS_TO_OPEN:
            show_info("Too many coincidences (%s)" % len(resources_matching))
        else:
            for resource in resources_matching:
                open_default_editor(resource.file)
    else:
        show_info("No text is selected")


def get_text_selection():
    """Return the selected text in the active editor"""
    editor = window.activePage.activeEditor
    source = editor.sourceViewer.document
    selection = window.activePage.selection
    return source.get(selection.offset, selection.length)


def open_default_editor(file):
    """Open `file` with its default associated editor"""
    editor_registry = PlatformUI.getWorkbench().getEditorRegistry()
    editor_for_file = editor_registry.getDefaultEditor(file.getName())
    if editor_for_file:
        window.activePage.openEditor(
            FileEditorInput(file), editor_for_file.getId())
    else:
        show_info("There's no default editor for \"%s\"" % file.getName())


def show_info(message, title=None):
    """Show a information message dialog"""
    title = title or "Information"
    MessageDialog.openInformation(window.getShell(), title, message)


main()
